// <auto-generated />
using System;
using ApplicationsManager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationsManager.Migrations
{
    [DbContext(typeof(AppManagerContext))]
    [Migration("20230513105419_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationsManager.Entitiy.ApplicationType", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ApplicationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 5, 13, 14, 24, 19, 147, DateTimeKind.Local).AddTicks(5151),
                            Name = "صندوقک"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 5, 13, 14, 24, 19, 147, DateTimeKind.Local).AddTicks(5156),
                            Name = "ویژیتو"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 5, 13, 14, 24, 19, 147, DateTimeKind.Local).AddTicks(5157),
                            Name = "سفارشگیر"
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Customer", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedDate = new DateTime(2023, 5, 13, 14, 24, 19, 147, DateTimeKind.Local).AddTicks(5012),
                            Mobile = "09364142953",
                            Name = "احمدی",
                            Password = "123456",
                            Username = "ahmadi"
                        },
                        new
                        {
                            Id = 2L,
                            CreatedDate = new DateTime(2023, 5, 13, 14, 24, 19, 147, DateTimeKind.Local).AddTicks(5027),
                            Mobile = "09364142953",
                            Name = "اکبری",
                            Password = "123456",
                            Username = "akbari"
                        },
                        new
                        {
                            Id = 3L,
                            CreatedDate = new DateTime(2023, 5, 13, 14, 24, 19, 147, DateTimeKind.Local).AddTicks(5029),
                            Mobile = "09364142953",
                            Name = "حسینی",
                            Password = "123456",
                            Username = "hosseini"
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ApplicationTypeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("planId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationTypeId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("planId");

                    b.ToTable("Subscriptions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApplicationTypeId = 1L,
                            CreatedDate = new DateTime(2023, 5, 13, 14, 24, 19, 147, DateTimeKind.Local).AddTicks(5178),
                            CustomerId = 1L,
                            EndTime = new DateTime(2023, 5, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsActive = true,
                            StartTime = new DateTime(2023, 5, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            planId = 1L
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.SubscriptionActivity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceModel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUseTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("SubscriptionId")
                        .HasColumnType("bigint");

                    b.Property<string>("VersionCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SubscriptionId");

                    b.ToTable("SubscriptionActivity");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.SubscriptionPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MaxUsers")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlan");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Days = 10,
                            MaxUsers = 5,
                            Name = "ده روزه"
                        },
                        new
                        {
                            Id = 2L,
                            Days = 30,
                            MaxUsers = 5,
                            Name = "یکماهه"
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Subscription", b =>
                {
                    b.HasOne("ApplicationsManager.Entitiy.ApplicationType", "ApplicationType")
                        .WithMany("Subscriptions")
                        .HasForeignKey("ApplicationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationsManager.Entitiy.Customer", "Customer")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationsManager.Entitiy.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("planId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ApplicationType");

                    b.Navigation("Customer");

                    b.Navigation("SubscriptionPlan");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.SubscriptionActivity", b =>
                {
                    b.HasOne("ApplicationsManager.Entitiy.Subscription", "Subscription")
                        .WithMany("SubscriptionActivities")
                        .HasForeignKey("SubscriptionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Subscription");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.ApplicationType", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Customer", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Subscription", b =>
                {
                    b.Navigation("SubscriptionActivities");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.SubscriptionPlan", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
