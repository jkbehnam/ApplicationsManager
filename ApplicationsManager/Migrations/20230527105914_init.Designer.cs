// <auto-generated />
using System;
using ApplicationsManager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ApplicationsManager.Migrations
{
    [DbContext(typeof(AppManagerContext))]
    [Migration("20230527105914_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ApplicationsManager.Entitiy.ApplicationType", b =>
                {
                    b.Property<string>("AppEName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AppEName");

                    b.ToTable("ApplicationTypes");

                    b.HasData(
                        new
                        {
                            AppEName = "47",
                            CreatedDate = new DateTime(2023, 5, 27, 14, 29, 14, 661, DateTimeKind.Local).AddTicks(3392),
                            Id = 1L,
                            Name = "صندوقک"
                        },
                        new
                        {
                            AppEName = "41",
                            CreatedDate = new DateTime(2023, 5, 27, 14, 29, 14, 661, DateTimeKind.Local).AddTicks(3396),
                            Id = 2L,
                            Name = "ویژیتو"
                        },
                        new
                        {
                            AppEName = "52",
                            CreatedDate = new DateTime(2023, 5, 27, 14, 29, 14, 661, DateTimeKind.Local).AddTicks(3398),
                            Id = 3L,
                            Name = "سفارشگیر"
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.ApplicationVersion", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("ApplicationEName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsCritical")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ReleaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("code")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationEName");

                    b.ToTable("ApplicationVersions");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            ApplicationEName = "47",
                            IsCritical = false,
                            ReleaseDate = new DateTime(2023, 5, 27, 10, 59, 14, 661, DateTimeKind.Utc).AddTicks(3368),
                            code = 1,
                            name = "13.2.1"
                        },
                        new
                        {
                            Id = 2L,
                            ApplicationEName = "47",
                            IsCritical = false,
                            ReleaseDate = new DateTime(2023, 5, 27, 10, 59, 14, 661, DateTimeKind.Utc).AddTicks(3371),
                            code = 2,
                            name = "14.2.1"
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BarnchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("98be75ba-0227-4f55-affa-18d39c634685"),
                            BarnchName = "مطهری",
                            City = "کرمان",
                            CreatedDate = new DateTime(2023, 5, 27, 14, 29, 14, 661, DateTimeKind.Local).AddTicks(3230),
                            MarketName = "خوارو بار فروشی احمدی",
                            Mobile = "09364142953",
                            OwnerName = "احمدی",
                            State = "کرمان"
                        },
                        new
                        {
                            Id = new Guid("4c9862c1-6777-45b6-8581-2151898af73e"),
                            BarnchName = "مطهری",
                            City = "کرمان",
                            CreatedDate = new DateTime(2023, 5, 27, 14, 29, 14, 661, DateTimeKind.Local).AddTicks(3250),
                            MarketName = "سوپرمارکت احد",
                            Mobile = "09364142953",
                            OwnerName = "اکبری",
                            State = "کرمان"
                        },
                        new
                        {
                            Id = new Guid("519665be-1e28-4d25-8cf3-2ce95695d738"),
                            BarnchName = "مطهری",
                            City = "تهران",
                            CreatedDate = new DateTime(2023, 5, 27, 14, 29, 14, 661, DateTimeKind.Local).AddTicks(3253),
                            MarketName = "سوپرمارکت صالحی",
                            Mobile = "09364142953",
                            OwnerName = "صالحی",
                            State = "تهران"
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Subscription", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("AppEName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DeviceId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<long?>("PlanId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AppEName");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PlanId");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.SubscriptionPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<int?>("Days")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SubscriptionPlans");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Days = 10,
                            Name = "ده روزه"
                        },
                        new
                        {
                            Id = 2L,
                            Days = 30,
                            Name = "یکماهه"
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0178d296-9c94-448e-8ced-9c09d744b510"),
                            FName = "حمید",
                            LName = "اکبری",
                            Password = "123456",
                            Role = 1,
                            Username = "hamid"
                        },
                        new
                        {
                            Id = new Guid("dd37fb26-5dcf-43ab-bc34-88d3a0965f40"),
                            FName = "میلاد",
                            LName = "انجم شعاع",
                            Password = "123456",
                            Role = 0,
                            Username = "milad"
                        });
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.ApplicationVersion", b =>
                {
                    b.HasOne("ApplicationsManager.Entitiy.ApplicationType", "ApplicationType")
                        .WithMany("ApplicationVersions")
                        .HasForeignKey("ApplicationEName");

                    b.Navigation("ApplicationType");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Subscription", b =>
                {
                    b.HasOne("ApplicationsManager.Entitiy.ApplicationType", "applicationType")
                        .WithMany("Subscriptions")
                        .HasForeignKey("AppEName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationsManager.Entitiy.Customer", "Customer")
                        .WithMany("Subscriptions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ApplicationsManager.Entitiy.SubscriptionPlan", "SubscriptionPlan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("PlanId");

                    b.Navigation("Customer");

                    b.Navigation("SubscriptionPlan");

                    b.Navigation("applicationType");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.ApplicationType", b =>
                {
                    b.Navigation("ApplicationVersions");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.Customer", b =>
                {
                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("ApplicationsManager.Entitiy.SubscriptionPlan", b =>
                {
                    b.Navigation("Subscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
